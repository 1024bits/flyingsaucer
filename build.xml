<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<project name="Flying Saucer Build File" default="help" basedir=".">
    <description>Checkout, build, test, and package the Flying Saucer project.</description>

    <target name="help">
        <echo message=" ant settings:       show all Ant properties to be used"/>
        <echo message=" ant clean:          clean up any compilation or distribution files made"/>
        <echo message=" ant compile:        compile the source"/>
        <echo message=" ant clean-compile: 	clean, then compile the source"/>
        <echo message=" ant browser:        build run the browser"/>
        <echo message=" ant test:           build run the test app"/>
        <echo message=" ant about:          build run the about box demo"/>
    </target>


    <!-- =====================================================
         init and prefab settings
         ===================================================== -->
    <property name="app.name" value="flyingsaucer"/>
    <property name="user.overrides"
        location="${user.home}/.${app.name}/${app.name}.build.properties"/>
    <property name="project.overrides" location="build.properties"/>
    <property file="${user.overrides}"/>
    <property file="${project.overrides}"/>

    <target name="properties">
        <tstamp/>
        <available file="${user.overrides}" property="user.overrides.available"/>
        <available file="${project.overrides}" property="project.overrides.available"/>
        <echo message="Loading any properties found in '${user.overrides}'"/>
        <echo message="Loading any properties found in '${project.overrides}'"/>
    </target>

    <!-- 
    PROJECT PROPERTIES
    
    These are safe defaults. For sharing new settings with the team, modify
    build.properties.
    
    For making changes only visible to your machine, modify
      ${user.home}/.flyingsaucer/flyingsaucer.build.properties    
    -->
    <!-- Directories -->
    <property name="libraries.dir" location="lib"/>
    <property name="src.dir" location="src"/>
    <property name="doc.dir" location="doc"/>
    <property name="src.junit-test.java.dir" location="${src.dir}/junit"/>
    <property name="src.browser.java.dir" location="demos/browser/src/java"/>
    <property name="src.browser.icons.dir" location="demos/browser/src/icons"/>
    <property name="src.blower.java.dir" location="${src.java.dir}"/>
    <property name="src.about.java.dir" location="demos/about/src/java"/>
    <property name="src.photogallery.java.dir" location="demos/photogallery/src/java"/>
    <property name="src.filebrowser.java.dir" location="demos/filebrowser/src/java"/>
    <property name="dest.dir" location="build"/>
    <property name="dest.javadoc.full.dir" location="${doc.dir}/full/api"/>
    <property name="dest.javadoc.user.dir" location="${doc.dir}/user/api"/>
    <property name="dest.java2html.dir" location="${doc.dir}/full/code"/>
    <property name="src.java.dir" location="${src.dir}/java"/>
    <property name="dest.java.dir" location="${dest.dir}/classes"/>
    <property name="src.resources.css.dir" location="${src.dir}/css"/>
    <property name="dest.resources.css.dir" location="${dest.java.dir}/resources/css"/>
    <property name="src.resources.conf.dir" location="${src.dir}/conf"/>
    <property name="dest.resources.conf.dir" location="${dest.java.dir}/resources/conf"/>
    <property name="src.resources.elements.dir" location="${src.dir}/element"/>
    <property name="dest.resources.elements.dir" location="${dest.java.dir}/resources/element"/>
    <property name="src.resources.entities.dir" location="${src.dir}/entity"/>
    <property name="dest.resources.entities.dir" location="${dest.java.dir}/resources/entity"/>
    <property name="src.resources.notations.dir" location="${src.dir}/notation"/>
    <property name="dest.resources.notations.dir" location="${dest.java.dir}/resources/notation"/>
    <property name="src.resources.dtd.dir" location="${src.dir}/dtd"/>
    <property name="dest.resources.dtd.dir" location="${dest.java.dir}/resources/dtd"/>
    <property name="src.packaging.dir" location="${src.dir}/packaging"/>
    <property name="src.demo.xhtml.dir" location="demos/browser/xhtml"/>
    <property name="src.demo.splash.dir" location="demos/splash"/>
    <property name="src.about.xhtml.dir" location="demos/about/xhtml"/>
    
    <property name="nb_profile" location="nb_profile"/>

    <!-- Compiler flags -->
    <!-- For details on each flag, see http://ant.apache.org/manual/CoreTasks/javac.html -->
    <property name="build.compiler" value="modern"/>
    <property name="compiler.debug" value="true"/>
    <property name="compiler.debuglevel" value="lines,vars,source"/>
    <property name="compiler.deprecation" value="off"/>
    <property name="compiler.failonerror" value="true"/>
    <property name="compiler.fork" value="no"/>
    <property name="compiler.listfiles" value="no"/>
    <property name="compiler.nowarn" value="off"/>
    <property name="compiler.optimize" value="off"/>
    <property name="compiler.source" value="1.4"/>
    <property name="compiler.target" value="1.4"/>
    <property name="compiler.verbose" value="no"/>
    
    <!-- Java.exe flags -->
    <property name="java-exec.fork.tests" value="true"/>

    <!-- path reference for all JAR files in /lib -->
    <path id="libraries.all">
        <fileset dir="${libraries.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
        
    <!-- path reference for all JAR files in /lib, plus all our built jars -->
    <path id="libraries-and-dest.all">
        <path refid="libraries.all"/>
        <fileset dir="${dest.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <patternset id="org-java-files">
        <include name="org/xhtmlrenderer/**"/>
    </patternset>

    <patternset id="user-java-files">
        <includesfile name="src/java/org/xhtmlrenderer/simple/XHTMLPanel.java"/>
        <include name="src/java/org/xhtmlrenderer/simple/*.java"/>
    </patternset>

    <patternset id="xhtml-files">
        <include name="*.xhtml"/>
        <include name="*.gif"/>
        <include name="*.png"/>
        <include name="splash/**"/>
        <include name="about/**"/>
        <include name="alice/**"/>
        <include name="game/**"/>
        <include name="fonts/**"/>
        <include name="layout/**/*.xhtml"/>
    </patternset>
      
    <!-- zip file reference for all XHTML in the demos directory, and supporting files -->
    <zipfileset id="xhtml.demos" dir="${src.demo.xhtml.dir}" prefix="demos/">
        <patternset refid="xhtml-files"/>
    </zipfileset>

    <zipfileset id="xhtml.about.demos" dir="${src.about.xhtml.dir}" prefix="demos/">
        <patternset refid="xhtml-files"/>
    </zipfileset>

    <!-- zip file reference for all splash XHTML in the demos directory, and supporting files -->
    <zipfileset id="xhtml.splash" dir="${src.demo.splash.dir}" prefix="demos/splash">
        <include name="*.html"/>
        <include name="images/**"/>
    </zipfileset>

    <!-- 
         definition of a javac task with all compiler parameters read from
         properties. can be used for most uses of javac in this file.
    -->
    <presetdef name="javac-full">
        <javac
            srcdir="${src.java.dir}"
            destdir="${dest.java.dir}"

            debug="${compiler.debug}"
            debuglevel="${compiler.debuglevel}"
            deprecation="${compiler.deprecation}"
            failonerror="${compiler.failonerror}"
            fork="${compiler.fork}"
            listfiles="${compiler.listfiles}"
            nowarn="${compiler.nowarn}"
            optimize="${compiler.optimize}"
            source="${compiler.source}"
            target="${compiler.target}"
            verbose="${compiler.verbose}"
            encoding="iso-8859-1"
            >
            <classpath refid="libraries.all"/>
            <exclude name="**/net/**" />
            <exclude name="**/prototype/**" />
        </javac>
    </presetdef>

    <!-- General initialization, including properties. -->
    <target name="init" depends="properties">
        <mkdir dir="${dest.dir}"/>
        <mkdir dir="${dest.java.dir}"/>
        <mkdir dir="${dest.resources.css.dir}"/>
        <mkdir dir="${dest.resources.conf.dir}"/>
        <mkdir dir="${dest.resources.elements.dir}"/>
        <mkdir dir="${dest.resources.entities.dir}"/>
        <mkdir dir="${dest.resources.notations.dir}"/>
        <mkdir dir="${dest.resources.dtd.dir}"/>
    </target>

    <!-- =====================================================
         Compile, Jar, and Clean
         ===================================================== -->

    <!-- Deletes all files from destination directory tree. -->
    <target name="clean" description="clean" depends="properties">
        <delete dir="${dest.dir}"/>
        <delete>
            <fileset dir="${basedir}">
                <include name="**/*~"/>
            </fileset>
        </delete>
    </target>

    <target name="clean-for-core-debug" depends="clean,resources.core"/>
    
    <!-- cleans all javadoc/api files -->
    <target name="clean-javadoc" description="clean project javadoc files" depends="properties">
        <delete dir="${dest.javadoc.full.dir}"/>
        <delete dir="${dest.javadoc.user.dir}"/>
    </target>

    <!-- cleans all java2html files -->
    <target name="clean-java2html" description="clean project java2html files" depends="properties">
        <delete dir="${dest.java2html.dir}"/>
    </target>

    <!-- Cleans all build files, then recompiles. -->
    <target name="clean-compile" description="clean compile" depends="clean,compile"/>

    <!-- Cleans all build files, then recompiles. -->
    <target name="demo-compile" description="clean compile" depends="clean-compile,compile.browser,compile.about,compile.photogallery"/>

    <!-- Compiles application and copies resources to destination directory. -->
    <target name="compile" description="compile" depends="init,resources.core">
        <javac-full>
            <include name="org/xhtmlrenderer/**"/>
        </javac-full>
    </target>

    <!-- copies core resources to destination directory. -->
    <target name="resources.core" description="copy core resources to build directory" depends="init">
        <copy todir="${dest.resources.css.dir}" file="${src.resources.css.dir}/default.css"/>
        <copy todir="${dest.resources.conf.dir}" file="${src.resources.conf.dir}/xhtmlrenderer.conf"/>
        <copy todir="${dest.resources.elements.dir}">
          <fileset dir="${src.resources.elements.dir}">
            <include name="*.mod"/>
          </fileset>
        </copy> 
        <copy todir="${dest.resources.entities.dir}">
          <fileset dir="${src.resources.entities.dir}">
            <include name="*.ent"/>
            <include name="*.mod"/>
          </fileset>
        </copy> 
        <copy todir="${dest.resources.dtd.dir}">
          <fileset dir="${src.resources.dtd.dir}">
            <include name="*.dtd"/>
          </fileset>
        </copy> 
        <copy todir="${dest.resources.notations.dir}">
          <fileset dir="${src.resources.notations.dir}">
            <include name="*.mod"/>
          </fileset>
        </copy> 
    </target>

    <!-- Compiles the Flying Saucer browser along with the main codebase -->
    <target name="compile.browser" depends="compile,resources.browser">
        <javac-full srcdir="${src.browser.java.dir}"/>
    </target>

    <!-- Compiles the Flying Saucer browser along with the main codebase -->
    <target name="compile.blower" depends="init">
        <javac-full srcdir="${src.java.dir}"/>
    </target>

    <!-- Copies the resources needed to run the browser into the build tree -->
    <target name="resources.browser" depends="compile">
        <mkdir dir="build/classes/demos"/>
        <copy todir="build/classes/demos">
            <fileset dir="demos/browser/xhtml">
                <include name="*.xhtml"/>
                <include name="*.gif"/>
                <include name="*.png"/>
                <include name="splash/**"/>
                <include name="about/**"/>
                <include name="alice/**"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.photogallery" depends="compile">
        <javac-full srcdir="${src.photogallery.java.dir}"/>
        <mkdir dir="build/classes/demos"/>
        <copy todir="build/classes/demos">
            <fileset dir="demos/photogallery/xhtml">
                <include name="*.xhtml"/>
                <include name="*.png"/>
                <include name="*.jpg"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.filebrowser" depends="compile">
        <javac-full srcdir="${src.filebrowser.java.dir}"/>
        <copy todir="build/classes/">
            <fileset dir="${src.filebrowser.java.dir}">
                <include name="**/*.xhtml"/>
                <include name="*.png"/>
                <include name="*.jpg"/>
            </fileset>
        </copy>
    </target>
    
    <!-- Compiles the Help/About Box demo along with the main codebase -->
    <target name="compile.about" depends="compile">
        <javac-full srcdir="${src.about.java.dir}"/>
    </target>

    <!-- Compiles the JUnit tests along with the main codebase -->
    <target name="compile.junit" depends="compile">
        <javac-full srcdir="${src.junit-test.java.dir}"/>
    </target>

    <!-- Compiles main codebase, browser and about box -->
    <target name="compile.all" depends="compile, compile.browser, compile.about, compile.photogallery">
    </target>

    <!--
    DONT USE THIS FROM COMMAND LINE; use docs
    builds JavaDoc for all code. Meant to be used with antcall; set parameters
    for properties antcall.dest.javadoc.dir and antcall.javadoc.file 
    -->
    <target name="_javadoc" description="internal use; use 'docs' instead. builds javadoc for all XR packages" depends="properties">
        <javadoc
            access="public"
            author="true"
            classpathref="libraries.all"
            destdir="${antcall.dest.javadoc.dir}"
            nodeprecated="false"
            nodeprecatedlist="false"
            noindex="false"
            nonavbar="false"
            notree="false"
            source="1.4"
            sourcefiles="${antcall.javadoc.file}"
            sourcepath="${src.java.dir}"
            splitindex="true"
            use="true"
            encoding="iso-8859-1"
            version="true">

            <packageset dir="${src.java.dir}">
                <patternset refid="org-java-files"/>
            </packageset>

            <!-- NOTE: wanted to make this a property, but Ant was prepending the
            base directory name to the URL when running this target through Antcall.
            Odd. -->
            <link offline="true" href="http://java.sun.com/j2se/1.4.2/docs/api" packagelistLoc="http://java.sun.com/j2se/1.4.2/docs/api"/>
        </javadoc>
    </target>
    
    <!-- Builds core, browser and about box jars. -->
    <target name="jars" description="build all jars" depends="core-jar, browser-jar, about-jar, photogallery-jar, filebrowser-jar">
    </target>
    
    <!-- Compiles main codebase, and builds jar for it -->
    <target name="core-jar" depends="compile" description="build core jar">
        <jar jarfile="${dest.dir}/core-renderer.jar" compress="true">
            <fileset dir="${dest.java.dir}">
                <include name="**/*.class"/>
                <exclude name="org/joshy/html/app"/>
                <exclude name="**/demo/**"/>
            </fileset>
            <fileset dir="${dest.dir}">
                <include name="resources/**"/>
            </fileset>
            <fileset dir="${dest.java.dir}">
                <include name="resources/**"/>
            </fileset>
        </jar>
    </target>
    
    <!-- Compiles browser and main codebase, and builds jar for browser -->
    <target name="browser-jar" depends="compile.browser" description="build browser jar">
        <jar jarfile="${dest.dir}/browser.jar" compress="true"
            manifest="${src.packaging.dir}/manifest"
            duplicate="preserve"
            >
            <fileset dir="${dest.java.dir}">
                <include name="org/xhtmlrenderer/demo/browser/**"/>
            </fileset>
            <zipfileset refid="xhtml.demos"/>
            <zipfileset refid="xhtml.splash"/>
            <fileset dir="${src.browser.icons.dir}">
              <include name="images/**" />
            </fileset>
        </jar>
    </target>
    
    <!-- Compiles about box and main codebase, and builds jar for about box -->
    <target name="about-jar" depends="compile.about" description="build about jar">
        <jar jarfile="${dest.dir}/about.jar" compress="true"
            manifest="${src.packaging.dir}/manifest"
            duplicate="preserve"
            >
            <fileset dir="${dest.java.dir}">
                <include name="org/xhtmlrenderer/demo/aboutbox/**"/>
            </fileset>
            <zipfileset refid="xhtml.about.demos"/>
            <zipfileset refid="xhtml.splash"/>
        </jar>
    </target>

    <!-- Compiles photogallery and main codebase, and builds jar for photogallery -->
    <target name="photogallery-jar" depends="compile.photogallery" description="build photogallery jar">
        <jar jarfile="${dest.dir}/photogallery.jar" compress="true"
            manifest="${src.packaging.dir}/manifest"
            duplicate="preserve"
            >
            <fileset dir="${dest.java.dir}">
                <include name="org/xhtmlrenderer/demo/photogallery/**"/>
            </fileset>
        </jar>
    </target>

    <!-- Compiles photogallery and main codebase, and builds jar for photogallery -->
    <target name="filebrowser-jar" depends="compile.filebrowser" description="build filebrowser jar">
        <jar jarfile="${dest.dir}/filebrowser.jar" compress="true"
            manifest="${src.packaging.dir}/manifest"
            duplicate="preserve"
            >
            <fileset dir="${dest.java.dir}">
                <include name="org/xhtmlrenderer/demo/filebrowser/**"/>
            </fileset>
        </jar>
    </target>

    <!-- =====================================================
         Build the various distributions
         ===================================================== -->

    <target name="dists" depends="jnlp-dist, src-dist, binary-dist">
    </target>
    <target name="dists-upload">
        <scp todir="${docs.upload.username}:${docs.upload.password}@${docs.upload.hostname}:mainwebsite_html/projects/xhtmlrenderer/">
            <fileset dir="${dest.dir}">
                <include name="*.zip"/>
                <include name="*.jnlp"/>
                <include name="*.jar"/>
            </fileset>
        </scp>
    </target>

    <!-- Builds a ZIP file of entire project from base directory. -->
    <target name="zip" description="zip file" depends="jars">
        <zip basedir="${basedir}" zipfile="../flyingsaucer.zip"/>
    </target>

    <!-- Builds all jars and packages jars and 3rd party libraries into one jar -->
    <target name="binary-dist" depends="jars" description="Play Binary Distro">
        <copy todir="${dest.dir}">
            <fileset dir=".">
                <include name="demos/*.xhtml"/>
                <include name="demos/splash/**"/>
            </fileset>
            <fileset dir="${libraries.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${src.packaging.dir}">
                <include name="readme.txt"/>
            </fileset>
        </copy>
        <zip basedir="${dest.dir}" zipfile="build/${app.name}.zip">
            <include name="*.jar"/>
            <include name="demos/**"/>
        </zip>
    </target>

    <!-- 
    Builds a ZIP file of all source for distribution, with 3rd party libraries
    and XHTML samples included
    -->
    <target name="src-dist" depends="init" description="Play Src Distro">
        <zip basedir="${basedir}" zipfile="${dest.dir}/${app.name}.src.zip">
            <include name="build.xml"/>
            <include name="lib/**"/>
            <include name="src/**"/>
            <include name="demos/**"/>
            <zipfileset dir="${src.packaging.dir}" includes="readme.txt" fullpath="readme.txt"/>
        </zip>
    </target>

    <!-- Build the JNLP distribution -->
    <target name="jnlp-dist" depends="init, jars" description="Build JNLP Distro">
        <copy todir="${dest.dir}">
            <fileset dir="${libraries.dir}">
                <include name="ss_css2.jar"/>
                <include name="xalan.jar"/>
            </fileset>
            <fileset dir="${src.packaging.dir}">
                <include name="fs.jnlp"/>
            </fileset>
            <fileset dir="${src.packaging.dir}">
                <include name="flyingsaucer.png"/>
            </fileset>
            <fileset dir="${src.packaging.dir}">
                <include name="aboutbox.jnlp"/>
            </fileset>
        </copy>
        <signjar jar="${dest.dir}/core-renderer.jar" alias="joshy" storepass="password" keystore="teststore"/>
        <signjar jar="${dest.dir}/browser.jar" alias="joshy" storepass="password" keystore="teststore"/>
        <signjar jar="${dest.dir}/ss_css2.jar" alias="joshy" storepass="password" keystore="teststore"/>
        <signjar jar="${dest.dir}/xalan.jar" alias="joshy" storepass="password" keystore="teststore"/>
        <signjar jar="${dest.dir}/about.jar" alias="joshy" storepass="password" keystore="teststore"/>
    </target>
    
    <!-- =================================================
         Tests
         ================================================= -->

    <!-- Compiles, then runs HTML test -->
    <target name="test" depends="compile" description="Test">
        <java
            classname="org.xhtmlrenderer.swing.HTMLTest"
            classpath="${dest.java.dir};${dest.dir}"
            fork="${java-exec.fork.tests}"
            >
            <arg value="${file}"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
            <classpath refid="libraries.all"/>
        </java>
    </target>

    <!-- Runs a speed test after a compile -->
    <target name="test.speed" depends="test.css-speed">
    </target>

    <!-- Runs a speed test after a compile -->
    <target name="test.css-speed" depends="compile">
        <java classname="org.xhtmlrenderer.test.HamletSpeedTest"
            fork="${java-exec.fork.tests}">
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
            <classpath>
                <pathelement path="${basedir}"/>
                <pathelement path="${dest.dir}"/>
                <pathelement path="${dest.java.dir}"/>
                <fileset dir="${libraries.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <!-- Runs a custom block test after a compile -->
    <target name="test.customblock" depends="compile">
        <java classname="org.xhtmlrenderer.test.CustomBlockTest"
            classpath="${dest.java.dir}"
            fork="${java-exec.fork.tests}">
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
            <classpath refid="libraries.all"/>
        </java>
    </target>

    <!-- target just shows how a single test can be run -->
    <target name="test.junit.simple" depends="compile.junit">
      <junit printsummary="withOutAndErr"
             timeout="60000"
             filtertrace="on"
             haltonerror="on" 
             showoutput="on"
             haltonfailure="on">
             
        <classpath>
          <pathelement path="${basedir}" />
          <pathelement path="${dest.dir}" />
          <pathelement path="${dest.java.dir}" />
          <fileset dir="${libraries.dir}">
            <include name="*.jar"/>
          </fileset>
        </classpath>
             
        <formatter type="plain" usefile="false" />

        <!-- run a single test -->
        <test name="tests.public_apis.SimpleJUnitTest" />
      </junit>
    </target>

    <target name="test.junit.public-apis" depends="compile.junit" description="Runs all JUnit unit tests.">
      <junit printsummary="withOutAndErr" 
             timeout="60000"
             filtertrace="on"
             haltonerror="on" 
             showoutput="on"
             haltonfailure="on">
             
        <!-- <sysproperty key="show-config" value="${show-config}" /> -->
        <!-- <sysproperty key="show-config" value="ALL" /> -->

        <classpath>
          <pathelement path="${basedir}" />
          <pathelement path="${dest.dir}" />
          <pathelement path="${dest.java.dir}" />
          <fileset dir="${libraries.dir}">
            <include name="*.jar"/>
          </fileset>
        </classpath>
             
        <formatter type="plain" usefile="false" />

        <!-- run all class files with Test in the name in the java dest directory -->
        <batchtest fork="no">
          <fileset dir="${dest.java.dir}">
            <include name="tests/**/factory/*Test*" />
            <exclude name="tests/**/Abstract*Test*" />
            <exclude name="tests/**/SimpleJUnitTest*" />
          </fileset>
        </batchtest>        
      </junit>
    </target>

    <!-- Builds and jars the browser demo, and runs it -->
    <target name="browser" depends="compile.browser, jars">
        <java classname="org.xhtmlrenderer.demo.browser.BrowserStartup"
            fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
            <sysproperty key="sun.java2D.opengl" value="false"/>
        </java>
    </target>
    
    <target name="profile-single" depends="compile, jars" description="Profile File">
      <fail unless="netbeans.home">This target can only run inside the NetBeans IDE.</fail>
      <nbprofile classname="org.xhtmlrenderer.test.SimplePageTest">
        <classpath refid="libraries-and-dest.all"/>
      </nbprofile>
    </target>    

    <!-- Builds and jars the browser demo, and runs it -->
    <target name="simple-page" depends="compile, jars">
        <java 
            classname="org.xhtmlrenderer.test.SimplePageTest"
            fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
            <sysproperty key="sun.java2D.opengl" value="false"/>
        </java>
      <nbprofile classname="org.xhtmlrenderer.test.SimplePageTest">
        <classpath refid="libraries-and-dest.all"/>
      </nbprofile>
        
    </target>

        <!-- Builds and jars the about box demo, and runs it -->
    <target name="aboutbox" depends="jars">
        <java classname="org.xhtmlrenderer.demo.aboutbox.AboutBox"
            fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
        </java>
    </target>

    <!-- Builds and jars the about box demo, and runs it -->
    <target name="photogallery" depends="jars">
        <java classname="org.xhtmlrenderer.demo.photogallery.PhotoGallery"
            fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
        </java>
    </target>

    <target name="filebrowser" depends="core-jar, filebrowser-jar">
        <java classname="org.xhtmlrenderer.demo.filebrowser.FileBrowser"
            fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
        </java>
    </target>

    <!-- Compiles, then runs HTML test -->
    <target name="test.headless" depends="compile" description="Test">
        <java
            classname="org.xhtmlrenderer.test.Graphics2DRendererTest"
            classpath="${dest.java.dir};${dest.dir}"
            fork="${java-exec.fork.tests}"
            >
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
            <classpath refid="libraries.all"/>
        </java>
    </target>


    <!-- Builds the core jar and runs unit tests -->
    <target name="unit-tests" depends="diff-tests">
    </target>

    <!-- Builds the core jar and runs diff tests -->
    <target name="diff-tests" depends="core-jar">
        <java classname="org.xhtmlrenderer.test.DocumentDiffTest"
            fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all"/>
            <sysproperty key="show-config" value="${show-config}"/>
            <syspropertyset>
                <propertyref prefix="xr."/>
            </syspropertyset>
        </java>
    </target>

    <!-- Builds the core jar and runs diff tests -->
    <!-- this should almost never be called *** 
    
    <target name="generate-diff-tests" depends="core-jar">
        <java classname="org.xhtmlrenderer.test.DocumentDiffGenerate" 
              fork="${java-exec.fork.tests}">
            <classpath refid="libraries-and-dest.all" />
            <sysproperty key="show-config" value="${show-config}" />
            <syspropertyset>
              <propertyref prefix="xr." />
            </syspropertyset> 
        </java>
    </target>
    
    -->

    <!-- =================================================
         Documentation
         ================================================= -->

    <target name="docs" depends="clean-java2html, clean-javadoc">
        <!-- <taskdef name="java2html"
            classname="de.java2html.anttasks.Java2HtmlTask"
            classpath="lib/java2html.jar"
            />

        <java2html
            srcdir="${src.java.dir}"
            destdir="${dest.java2html.dir}"
            includes="**/*.java"
            style="eclipse"
            showLineNumbers="true"
            showFileName="true"
            showTableBorder="true"
            /> -->
        <antcall target="_javadoc">
            <param name="antcall.dest.javadoc.dir" value="${dest.javadoc.full.dir}"/>
            <param name="antcall.javadoc.file" value=""/>
        </antcall>
        <antcall target="_javadoc">
            <param name="antcall.dest.javadoc.dir" value="${dest.javadoc.user.dir}"/>
            <param name="antcall.javadoc.file" value="src/java/org/xhtmlrenderer/simple/XHTMLPanel.java"/>
            <reference refid="user-java-files" torefid="org-java-files"/>
        </antcall>
        <copy todir="${dest.dir}/docs" file="${dest.javadoc.full.dir}/index.html"/>
    </target>

    <target name="docs-upload">
        <scp todir="${docs.upload.username}:${docs.upload.password}@${docs.upload.hostname}:${docs.upload.path}">
            <fileset dir="${dest.dir}">
                <include name="docs/**"/>
            </fileset>
            <fileset dir=".">
                <include name="doc/**"/>
            </fileset>
        </scp>
    </target>
    
    <!-- =======================================
         General
         ======================================= -->
    <target name="settings" depends="properties">

        <echo message="******************************************"/>
        <echo message="App Settings"/>
        <echo message="******************************************"/>
        <echo message=""/>
        <echo message="app.name                                ${app.name}"/>
        <echo message=""/>

        <echo message=""/>
        <echo message="******************************************"/>
        <echo message="Directory Settings"/>
        <echo message="******************************************"/>
        <echo message=""/>
        <echo message="basedir                                 ${basedir}"/>
        <echo message="libraries.dir                           ${libraries.dir}"/>
        <echo message="src.dir                                 ${src.dir}"/>
        <echo message="doc.dir                                 ${doc.dir}"/>
        <echo message="dest.dir                                ${dest.dir}"/>
        <echo message="src.java.dir                            ${src.java.dir}"/>
        <echo message="dest.javadoc.full.dir                   ${dest.javadoc.full.dir}"/>
        <echo message="dest.javadoc.user.dir                   ${dest.javadoc.user.dir}"/>
        <echo message="dest.java2html.dir                      ${dest.java2html.dir}"/>
        <echo message="dest.java.dir                           ${dest.java.dir}"/>
        <echo message="src.about.java.dir                      ${src.about.java.dir}"/>
        <echo message="src.browser.java.dir                    ${src.browser.java.dir}"/>
        <echo message="src.resources.css.dir                   ${src.resources.css.dir}"/>
        <echo message="dest.resources.css.dir                  ${dest.resources.css.dir}"/>
        <echo message="src.resources.conf.dir                  ${src.resources.conf.dir}"/>
        <echo message="dest.resources.conf.dir                 ${dest.resources.conf.dir}"/>
        <echo message="src.resources.entities.dir              ${src.resources.entities.dir}"/>
        <echo message="dest.resources.entities.dir             ${dest.resources.entities.dir}"/>
        <echo message="src.resources.notations.dir              ${src.resources.notations.dir}"/>
        <echo message="dest.resources.notations.dir             ${dest.resources.notations.dir}"/>
        <echo message="src.resources.elements.dir              ${src.resources.elements.dir}"/>
        <echo message="dest.resources.elements.dir             ${dest.resources.elements.dir}"/>
        <echo message="src.resources.dtd.dir                   ${src.resources.dtd.dir}"/>
        <echo message="dest.resources.dtd.dir                  ${dest.resources.dtd.dir}"/>
        <echo message="src.packaging.dir                       ${src.packaging.dir}"/>
        <echo message="src.demo.xhtml.dir                      ${src.demo.xhtml.dir}"/>
        <echo message="src.demo.splash.dir                     ${src.demo.splash.dir}"/>
        <echo message="src.about.xhtml.dir                     ${src.about.xhtml.dir}"/>
        <echo message=""/>

        <echo message=""/>
        <echo message="******************************************"/>
        <echo message="Compiler Settings"/>
        <echo message="******************************************"/>
        <echo message=""/>
        <echo message="build.compiler                          ${build.compiler}"/>
        <echo message="compiler.debug                          ${compiler.debug}"/>
        <echo message="compiler.deprecation                    ${compiler.deprecation}"/>
        <echo message="compiler.failonerror                    ${compiler.failonerror}"/>
        <echo message="compiler.fork                           ${compiler.fork}"/>
        <echo message="compiler.listfiles                      ${compiler.listfiles}"/>
        <echo message="compiler.nowarn                         ${compiler.nowarn}"/>
        <echo message="compiler.optimize                       ${compiler.optimize}"/>
        <echo message="compiler.source                         ${compiler.source}"/>
        <echo message="compiler.target                         ${compiler.target}"/>
        <echo message="compiler.verbose                        ${compiler.verbose}"/>
        <echo message=""/>

        <echo message=""/>
        <echo message="******************************************"/>
        <echo message="Java Executable Settings"/>
        <echo message="******************************************"/>
        <echo message=""/>
        <echo message="java-exec.fork.tests                    ${java-exec.fork.tests}"/>
        <echo message=""/>

        <!--
        <echo message=""/>
        <echo message="******************************************"/>
        <echo message="Other Settings"/>
        <echo message="******************************************"/>
        <echo message=""/>
        -->
    </target>
</project>

<!-- ========== this is the CVS log. Don't delete! ========== -->

<!-- 
$Id$

$Log$
Revision 1.87  2005/03/23 17:24:56  pdoubleya
Added elements/entities for XHTML resources.

Revision 1.86  2005/02/05 17:22:24  pdoubleya
added resources for entities and dtds to copys commands.

Revision 1.85  2005/01/29 12:20:06  pdoubleya
Exclude /prototype src directory from build.

Revision 1.84  2005/01/29 10:07:27  pdoubleya
Added task to sync nb_profile directory, and for running the SimplePageTest class.

Revision 1.83  2005/01/24 14:58:05  pdoubleya
Modified public-api test settings.

Revision 1.82  2005/01/13 00:47:48  tobega
Added preparation of values for a form submission

Revision 1.81  2004/12/14 01:50:13  tobega
Why is there always one more bug ;-) Now line-breaking should be cast-iron (I hope)

Revision 1.80  2004/12/12 16:11:04  tobega
Fixed bug concerning order of inline content. Added a demo for pseudo-elements.

Revision 1.79  2004/12/09 18:03:10  joshy
added game screen to browser
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.78  2004/12/01 13:59:40  joshy
added new demos
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.77  2004/11/30 21:24:39  joshy
turned off diffs again
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.76  2004/11/30 21:23:18  joshy
updated the unit tests

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.75  2004/11/30 00:37:20  joshy
modified docs
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.74  2004/11/27 15:46:37  joshy
lots of cleanup to make the code clearer

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.73  2004/11/16 15:19:29  pdoubleya
Exclude abstract FSCssTestCase from junit test suite.

Revision 1.72  2004/11/16 14:37:48  pdoubleya
Added support for JUnit tests.
Renamed test- targets to test. to be like other names.

Revision 1.71  2004/11/15 13:41:02  pdoubleya
Renamed javadoc target to _javadoc, as it is meant for internal use; use 'docs' target to generate javadocs for the project.

Revision 1.70  2004/11/12 20:43:29  joshy
added demo of custom font

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.69  2004/11/12 18:51:00  joshy
fixed repainting issue for background-attachment: fixed
added static util methods and get minimum size to graphics 2d renderer
added test for graphics 2d renderer

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.68  2004/11/11 15:27:12  joshy
added encoding
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.67  2004/11/11 15:25:32  joshy
changed the encoding

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.66  2004/11/07 23:24:18  joshy
added menu item to generate diffs
added diffs for multi-colored borders and inline borders

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.65  2004/11/07 16:23:16  joshy
added support for lighten and darken to bordercolor
added support for different colored sides

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.64  2004/11/07 13:39:16  joshy
fixed missing borders on the table
changed td and th to display:table-cell
updated isBlockLayout() code to fix double border problem with tables

-j


Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.63  2004/11/06 22:49:51  joshy
cleaned up alice
initial support for inline borders and backgrounds
moved all of inlinepainter back into inlinerenderer, where it belongs.



Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.62  2004/11/06 01:50:40  joshy
support for line-height
cleaned up the alice demo
added unit tests for font family selection and line-height

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.61  2004/11/05 18:48:41  joshy
added alice demo to the browser
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.60  2004/11/05 18:45:14  joshy
support for floated blocks (not just inline blocks)

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.59  2004/11/05 16:39:34  joshy
more float support
added border bug test
-j

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.58  2004/11/04 15:35:44  joshy
initial float support
includes right and left float
cannot have more than one float per line per side
floats do not extend beyond enclosing block

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.57  2004/11/03 23:54:32  joshy
added hamlet and tables to the browser
more support for absolute layout
added absolute layout unit tests
removed more dead code and moved code into layout factory


Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.56  2004/11/03 15:17:03  joshy
added intial support for absolute positioning

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.55  2004/11/02 20:44:54  joshy
put in some prep work for float support
removed some dead debugging code
moved isBlock code to LayoutFactory

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.54  2004/10/31 21:30:43  tobega
is now sane without building jars

Revision 1.53  2004/10/28 02:13:38  joshy
finished moving the painting code into the renderers

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.52  2004/10/28 01:34:22  joshy
moved more painting code into the renderers

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.51  2004/10/26 00:13:13  joshy
added threaded layout support to the HTMLPanel


Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.50  2004/10/22 14:07:10  joshy
added homepage link
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.49  2004/10/22 13:48:05  joshy
added missing files and a quick change to fix upload support for docs

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.48  2004/10/19 18:11:07  pdoubleya
Synchronized with test build file. CLASSPATH and other paths are now externalized in set references (fileset, patternset). Docs now uses build file javadoc target to run javadoc routine.

Revision 1.47  2004/10/19 15:00:51  joshy
updated the build file
removed some extraneous files
update the home page to point to the new jnlp files
updated the resource loader to use the marker class
updated the text of the about box

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.46  2004/10/19 14:17:30  joshy
merged the build2.xml into the build.xml
added docs and docs upload targets
updated the classpath for the jnlps
added jar files

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.45  2004/10/18 23:43:02  joshy
final updates today

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.44  2004/10/18 22:54:50  joshy
added r4 distribution
Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.43  2004/10/18 15:29:29  joshy
split the layout into two classes
made layout be an interface instead of a class.
moved the layout code into default layout.


Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.42  2004/10/18 15:00:42  joshy
added comments and correct logging to the layout factory
made layout factory use a hashtable instead of conditionals.
made layout factory reuse layout object instances

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.41  2004/10/18 14:19:34  joshy
removed build file reference to the logging properties file

Issue number:
Obtained from:
Submitted by:
Reviewed by:

Revision 1.40  2004/10/18 10:08:19  pdoubleya
Moved default property settings into build file itself. Now looks for build.properties as override, and a local properties file in userhome/.flyingsaucer/flyingsaucer.build.properties.

Revision 1.39  2004/10/13 22:55:36  pdoubleya
Added system property to auto-load configuration for logging system.

-->
